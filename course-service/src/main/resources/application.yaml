server:
  port: 8082
  servlet:
    context-path: /course
spring:
  application:
    name: course-service
  datasource:
    url: "jdbc:mysql://${MYSQL_HOST:mysqldb}:${MYSQL_PORT:3306}/course_online"
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:123456}
#      url: "jdbc:mysql://localhost:3306/course_online"
#      driverClassName: "com.mysql.cj.jdbc.Driver"
#      username: root
#      password: 123456
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        jdbc:
          time_zone: Asia/Ho_Chi_Minh
        dialect: org.hibernate.dialect.MySQL8Dialect
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP-SERVERS_HOST:localhost}:${SPRING_KAFKA_BOOTSTRAP-SERVERS_PORT:9092}
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      auto-offset-reset: earliest
#    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      acks: 1
#      retries: 1
#      properties:
#        request.timeout.ms: 100
#        enable.idempotence: true
#        max.in.flight.requests.per.connection: 5

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:8762/eureka/
  instance:
    prefer-ip-address: true

app:
  services:
    payment: http://${PAYMENT_HOST:localhost}:8084/payment
    test: http://${TEST_HOST:localhost}:8086/test
    profile: http://${PROFILE_HOST:localhost}:8081/profile

redis:
  host: ${SPRING_REDIS_HOST:localhost}
  port: ${SPRING_REDIS_PORT:6379}